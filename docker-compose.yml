version: '3.7'
services:
  postgres:
    container_name: 'auth_service_db'
    image: 'postgres:12.0-alpine'
    restart: on-failure
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    env_file:
      - ./.env
    volumes:
      - auth_service_data:/var/lib/postgresql/data
    networks:
      - auth_service
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${{DB_NAME}} -U $${{DB_USER}}' ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: 'auth_service_redis'
    image: 'bitnami/redis:latest'
    restart: 'on-failure'
    env_file:
      - ./.env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_AOF_ENABLED=yes
    command: /opt/bitnami/scripts/redis/run.sh
    networks:
      - auth_service
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 50

  web:
    container_name: 'auth_service_web_app'
    build:
      context: .
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - APP_PORT=8000
    depends_on:
      - postgres
      - redis
    networks:
      - auth_service

  nginx:
    container_name: 'auth_service_nginx'
    build: ./nginx
    ports:
      - '80:80'
    depends_on:
      - web
    networks:
      - auth_service

volumes:
  auth_service_data:

networks:
  auth_service:
    driver: bridge
